#!/bin/bash

source $HOME/bin/commons.sh

# Check that the branch URL is given
if [ $# -lt 2 ]; then
   echo "Usage: `basename $0` oldBranchURL newBranchURL"
   exit 1
fi

OLD_BRANCH_URL=`StripUserNameFromSvnURL $1`
NEW_BRANCH_URL=`StripUserNameFromSvnURL $2`
OLD_BRANCH_NAME=`basename $OLD_BRANCH_URL`
NEW_BRANCH_NAME=`basename $NEW_BRANCH_URL`
BRANCH_TYPE=`GetBranchType $OLD_BRANCH_URL`

echo $OLD_BRANCH_URL

## Check that we can retrieve the type of the branch
echo "BRANCH_TYPE = $BRANCH_TYPE"
if [ -z $BRANCH_TYPE ]; then
    echo "Error! Could not determine the BRANCH_TYPE."
    echo "Usually this is because the url_ field (in svnBranches_ table) of this branch contains the SVN_USER"
    exit 1
fi

## Check that the branch is not a production branch
if [ $BRANCH_TYPE = "PRODUCTION" ]; then
    echo " "
    echo "Cannot rename a production branch. Exiting."

    exit 1
fi


## Check that the branch exists in the repository
OLD_BRANCH_URL_DIR=`dirname "$OLD_BRANCH_URL"`
FOUND_BRANCH=`svn ls "$OLD_BRANCH_URL_DIR" | grep "$OLD_BRANCH_NAME"`

if [ -z "$FOUND_BRANCH" ]; then
    echo " "
    echo "Branch not found in the repository. Exiting."
    echo " "
    exit 1
fi

echo "About to rename branch $OLD_BRANCH_URL to $NEW_BRANCH_URL. Are you sure (Yes/No)?"
read ANSWER
if [ $ANSWER != 'Yes' ]; then
    echo "Operation cancelled by user"
    exit 0
fi

## Rename branch in the repository
OLD_BRANCH_URL_WITH_USER_NAME=`echo $OLD_BRANCH_URL | replacestr 'repository_sag' "$RESPONSIBLE_FOR_WEEKLY_MERGE"@repository_sag`
NEW_BRANCH_URL_WITH_USER_NAME=`echo $NEW_BRANCH_URL | replacestr 'repository_sag' "$RESPONSIBLE_FOR_WEEKLY_MERGE"@repository_sag`
MESSAGE="MatlabInfo:rename; source:$OLD_BRANCH_NAME; target:$NEW_BRANCH_NAME; description: Renamed branch; timestamp: $TIME_STAMP"
svn rename --non-interactive -m "$MESSAGE" $OLD_BRANCH_URL_WITH_USER_NAME $NEW_BRANCH_URL_WITH_USER_NAME

# Get the user name of the responsible for the branch (must be done before setting deleted_ in the DB)
RESPONSIBLE_FOR_BRANCH=`GetResponsibleForBranch $OLD_BRANCH_NAME`

OLD_BRANCH_ID=`GetActiveBranchId "$OLD_BRANCH_NAME"`

## Entering information in the database
REVISION_NUMBER=`GetLatestSVNRevision`
echo " "
echo "Inserting rename information into the database: $DATABASE_COMMAND"
echo "UPDATE svnBranches_ SET url_ = \"$NEW_BRANCH_URL\", name_ = \"$NEW_BRANCH_NAME\" WHERE id_ = $OLD_BRANCH_ID;" | $DATABASE_COMMAND

## Send an e-mail informing that the branch was renamed
EMAIL_BODY="Hi $RESPONSIBLE_FOR_BRANCH\n
\n
The branch '$OLD_BRANCH_NAME' was renamed to '$NEW_BRANCH_NAME'. If you don't agree with this, contact $RESPONSIBLE_FOR_WEEKLY_MERGE.\n
\n
Cheers"

SendEMail "$OLD_BRANCH_NAME: Branch was renamed successfully" "$EMAIL_BODY" "$RESPONSIBLE_FOR_BRANCH@imc.nl" "$RESPONSIBLE_FOR_WEEKLY_MERGE@imc.nl" "$RESPONSIBLE_FOR_WEEKLY_MERGE@imc.nl"
