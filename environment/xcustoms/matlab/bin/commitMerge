#!/bin/bash

source $HOME/bin/commons.sh

# Change 0 to 1 for running the script with svn that comes with Fedora
if [ 0 -eq 1 ];
then
    alias svn='/usr/bin/svn'
    echo "You are using svn 1.6. Are you sure you want to continue? [Y/N] "
    read myAnswer

    if [ $myAnswer != 'y' ]; then
        echo "Aborting on user's request"
        exit 0
    fi
fi

shopt -s expand_aliases
 
source ~/.userenv

myTargetBranch=`GetBranchName`
myOriginBranch=`cat .user/svn.log | awk '{print $2}' | replacestr 'origin:' '' | replacestr ';' ''`
myMergingRange=`cat .user/svn.log | awk '{print $5}' | replacestr 'range:' '' | replacestr ';' ''`

myFromRevision=`echo $myMergingRange | replacestr "-" " " | awk '{print $1}'`
myToRevision=`echo $myMergingRange | replacestr "-" " " | awk '{print $2}'`

echo "Information retrieved from svn.log"
echo " -------------------------------------------"
echo "| Origin branch is: $myOriginBranch "
echo "| Range is: $myMergingRange"
echo " -------------------------------------------"
echo "Is that correct? [y/n]"
read myAnswer

if [ $myAnswer != 'y' ]; then
    echo "Aborting on user's request"
    exit 0
fi

# Check whether a merge from the origin branch was done already that intersects with the current range
myOriginId=`GetActiveBranchId $myOriginBranch`
myTargetId=`GetActiveBranchId $myTargetBranch`
myQuery="SELECT fromRevision_, toRevision_ FROM svnMerges_ WHERE origin_ = $myOriginId AND target_ = $myTargetId AND !((fromRevision_ <= $myFromRevision AND toRevision_<= $myToRevision) OR (fromRevision_ >= $myFromRevision AND toRevision_ >= $myToRevision)) ;"

myAnswer=`echo $myQuery | $DATABASE_COMMAND | tail -n 1`

if [ ! -z "$myAnswer" ]; then
    echo "-------------------------------------------------------"
    echo "It seems like there already exists a merge whose revision range intersects with the current revision range:"
    echo "Existing merge: $myAnswer"
    echo "Current merge:  $myFromRevision  $myToRevision"
    echo ""
    echo "Will not do the commit."
    echo "-------------------------------------------------------"
    exit 1
fi

## Run the SVNC alias
svnc

if [ $? != 0 ]; then
    echo "Commit failed. Will not proceed any further."
    exit $?
fi

## Insert the information into the database
InsertSvnMerge "$myOriginBranch" "$myTargetBranch" "$myMergingRange" "crpi"


SVN_BRANCH_NAME=`GetBranchName`
RESPONSIBLE_FOR_BRANCH=`GetResponsibleForBranch $SVN_BRANCH_NAME`
RESPONSIBLE_FOR_BRANCH_EMAIL="$RESPONSIBLE_FOR_BRANCH@imc.nl"
RESPONSIBLE_FOR_WEEKLY_MERGE_EMAIL="$RESPONSIBLE_FOR_WEEKLY_MERGE@imc.nl"


#-------------------------------------------------------
# Announce the responsible that the merge went smooth
#-------------------------------------------------------
EMAIL_BODY="Hello $RESPONSIBLE_FOR_BRANCH,\n
\n
The weekly merge changes were commited to your branch.\n
\n
$EMAIL_POSTFIX"


echo "RESPONSIBLE_FOR_BRANCH_EMAIL       = $RESPONSIBLE_FOR_BRANCH_EMAIL" 
echo "RESPONSIBLE_FOR_WEEKLY_MERGE_EMAIL = $RESPONSIBLE_FOR_WEEKLY_MERGE_EMAIL"
SendEMail "$SVN_BRANCH_NAME: Weekly merge completed" "$EMAIL_BODY" "$RESPONSIBLE_FOR_BRANCH_EMAIL" "$RESPONSIBLE_FOR_WEEKLY_MERGE_EMAIL" "$RESPONSIBLE_FOR_WEEKLY_MERGE_EMAIL"
