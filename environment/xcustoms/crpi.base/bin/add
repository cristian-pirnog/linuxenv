#!/bin/bash

source ~/.userfunctions

#----------------------------------------------
printUsage()
{
cat << %%USAGE%%
     Usage: $(basename ${0}) [-h]

    Description:
        Does a 'git add', preceded by building the API doc html file
	for go projects.

    Options:
       -h
       --help
             Print this help message and exit.

%%USAGE%%
}


#----------------------------------------------
# Main script
#----------------------------------------------
shortOptions='h'  # Add short options here
longOptions='help,listOptions' # Add long options here
if $(isMac); then
    ARGS=`getopt "${shortOptions}" $*`
else
    ARGS=$(getopt -u -o "${shortOptions}" -l "${longOptions}" -n "$(basename ${0})" -- "$@")

fi

# If wrong arguments, print usage and exit
if [[ $? -ne 0 ]]; then
    printUsage
    exit 1;
fi

eval set -- "$ARGS"

while true; do
    case ${1} in
    --listOptions)
        listOptions
        exit 0
        ;;
    -h|--help)
        printUsage
        exit 0
        ;;
    --)
        shift
        break
        ;;
    "")
        # This is necessary for processing missing optional arguments
        shift
        ;;
    esac
done

# Build the api doc html file for go projects
if [[ -n $(find . -name '*.go') ]] && [[ -d doc ]]; then
    buildApidoc >/dev/null || exitWithError "Failed to build Api doc."
fi

# Convert the CHANGELOG markdown to HTML
if [[ -f doc/CHANGELOG.md ]]; then
    markdown doc/CHANGELOG.md > doc/CHANGELOG.html
fi

## Run git add
if [[ ${#*} > 0 ]]; then
    git add ${@} doc/CHANGELOG.* doc/apidoc.html
else
    git add --all
fi
