#!/bin/bash

#-----------------------------
# Function SafeMount
#-----------------------------
SafeMount()
{
    local lRemoteDir=$1
    local lRemotePath="/volume1/"${lRemoteDir}
    local lLocalDir="/mnt/ds"${lRemoteDir}

    if [[ -n ${2} ]]; then
	lLocalDir="/mnt/"${2}
    fi

    if [[ -n $(mount | grep ${lLocalDir}) ]]; then
	echo "${lLocalDir} is already mounted. Skipping"
	return
    else
	echo "Mounting ${lRemotePath} to ${lLocalDir}"
	sudo mount ${myNAS}:${lRemotePath} ${lLocalDir}
    fi
}

#-----------------------------
# Function SafeUnmount
#-----------------------------
SafeUnmount()
{
    local lLocalDir=${1}
    local lOption=${2}

    if [[ -z $(mount | grep ${lLocalDir}) ]]; then
	echo "${lLocalDir} is not mounted. Skipping"
	return
    else
	echo "Unmounting ${lLocalDir}"
	sudo umount ${myOption} "/mnt/ds"${lLocalDir}
    fi
}


#-----------------------------
# Main script
#-----------------------------

while getopts hu myOpt; do
    case ${myOpt} in
	h)
	    echo -e "Usage:\n\t$(basename $0) [-u]\n";
	    exit
	    ;;
	u)
	    echo "Unmounting NAS"
	    ;;
    esac
done



myNAS='crpidiskstation.local'

myMounts="backup downloads music photo work"

echo "Checking if NAS is alive"
nasReachable=$(ping -q -c 4 -s 0.2 ${myNAS})

echo nas


# -u option means unmount
if [[ ${1} == '-u' ]]; then
    if [[ ! ${nasReachable} ]]; then
	myOption="-l"
    fi

    for m in ${myMounts}
    do
	SafeUnmount ${m} ${myOption}
    done
    SafeUnmount home ${myOption}
    exit 0
fi

# ... otherwise, try to mount
if [[ ! ${nasReachable} ]]; then
    echo "The NAS ${myNAS} is not reachable. Exiting"
    exit 1
fi

echo ""
for m in ${myMounts}
do
    SafeMount ${m}
done
SafeMount homes/crpi dshome
echo ""
