#!/bin/bash

#----------------------------------------------
printUsage()
{
    cat << %%USAGE%%
    
    Usage: $(basename ${0}) [-h|--help]
           $(basename ${0}) stop
           $(basename ${0}) prod [--logPath path]
           $(basename ${0}) [cme|eux|liffe|uat]
 
    Description:
       Manages the Vplat GUIs

    Arguments:
       stop
           Kills all running GUIs.

       prod
           Starts all production GUIs (currently: cme, eux,liffe). 

       cme
       eux
       liffe
       uat
           Starts the GUI for the specified venue.

    Options:
       -h
       --help
           Prints this help message and exits.

       --logPath path
           Writes the log file to the directory given in the path

%%USAGE%%
}

#----------------------------------------------
killRunningGUIs()
{
    local lAsk=${1}

    # Check for running instances
    processIds=$(fp com.bbl.gui.StartVplatGui | awk '{print $1}')
    if [[ -n "${processIds}" ]]; then
	if [[ ${lAsk} != 'false' ]]; then
	    getAnswer "Found running GUIs. Would you like to kill them?" || return
	fi
	kill ${processIds}
    fi
}

source ~/.userfunctions

#----------------------------------------------
# Main script
#----------------------------------------------
shortOptions='h'  # Add short options here
longOptions='help,logPath,listOptions' # Add long options here
ARGS=$(getopt -o "${shortOptions}" -l "${longOptions}" -n "$(basename ${0})" -- "$@")

# If wrong arguments, print usage and exit
if [[ $? -ne 0 ]]; then
    printUsage
    exit 1;
fi

eval set -- "$ARGS"

logPath='.'
while true; do
    case ${1} in
    --listOptions)
        echo '--'$(sed 's/,/ --/g' <<< ${longOptions}) $(echo ${shortOptions} | sed 's/[^:]/-& /g') | sed 's/://g'
        exit 0
        ;;
	-h|--help)
            printUsage
            exit 0
            ;;
	--logPath)
	    if [[ -d ${2} ]]; then
		logPath=${2}
	    else
		echo "Log directory '${s}' does not exist. Using "
	    fi

	    shift 2
	    ;;
	--)
            shift
            break
            ;;
	"")
            # This is necessary for processing missing optional arguments 
            shift
            ;;
    esac
done

if [[ $# -lt 1 ]]; then
    printUsage
    exit 1
fi

monitoringDir="${HOME}/code/ronin/libs/monitoring/VplatGUI/"

# Fetch the venues for which to start the GUI's
for arg in $@; do
    if [[ ${arg} == 'stop' ]]; then
	killRunningGUIs 'false'
	exit 0
    elif [[ ${arg} == 'prod' ]]; then
	venues=$(ls ${monitoringDir} | grep -v uat)
	break
    elif [[ ! -d ${monitoringDir}/${arg} ]]; then
	printf "\nUnsuported venue: %s.\n\n" ${venues}
	printUsage && exit 1
    fi
    venues="${venues}${arg} "
done

killRunningGUIs 'true'

# Start the new instances
for v in ${venues}; do
    logFileName=${logPath}/"${v}.GUI.$(date +%Y%m%d-%H%M%S).log"
    cd ${monitoringDir}/${v} && (./rungui > ${logFileName} &) && cd - > /dev/null
done


# Remove old log files (i.e. modified more than 6 days ago) from logPath
cd ${logPath} && find -mtime 5 -name '*.GUI.*.log' -type f -delete
