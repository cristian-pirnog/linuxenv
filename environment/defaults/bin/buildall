#!/bin/bash

source ~/.userfunctions
	
usageMsg="Usage: $(basename ${0}) [roc|ron] <Release|Debug> [buildOptions]"
if [[ $# -lt 1 ]]; then
    echo ${usageMsg}
    exit 1
else
    case ${1} in
	'roc')
	    client=rocardian
	    shift
	    ;;
	'ron')
	    client=ronin
	    shift
	    ;;
	'Release'|'Debug')
	    client=rocardian
	    ;;
	*)
	    echo ${usageMsg}
	    exit 1
	    ;;
    esac
fi

buildType=${1}
shift 1

buildDirBase="${HOME}/build"

#if [[ $(pwd) != "${HOME}/code" ]]; then
#    cd ~/code
#fi

# Specify which projects we want to build
if [[ -z ${PROJECTS_TO_BUILD} ]]; then
    PROJECTS_TO_BUILD="katania balerion/strategy balerion/optimizer ${client}/support ${client}/optimizer  ${client}/live" # unit_tests/katania"
else
    PROJECTS_TO_BUILD=$(echo ${PROJECTS_TO_BUILD} | replace '__client__' "${client}")
fi

## Add portfolio build, only if not specified in the environment otherwise
if [[ ${SKIP_PORTFOLIO_BUILD} -ne 1 ]]; then
    PROJECTS_TO_BUILD="${PROJECTS_TO_BUILD} drogon/src/C"
fi

threadCount=$(($(nproc) - 1))
if [[ ${threadCount} < 1 ]]; then
    threadCount=1
fi

# Get the active branch name
branchName=$(branch -l s | awk '{print $NF}' | sort | uniq)
if [[ $(echo ${branchName} | wc -w) -gt 1 ]]; then
    echo "Mixed branches found. Will not build"
    exit 1
elif [[ $(echo ${branchName} | wc -w) -eq 0 ]]; then
    branchName="production"
fi



# Remove the target build dirs, if requested
if [[ -n $(echo $@ | grep -P '( |^)fresh( |$)') ]]; then
    rm -rf ${buildDirBase}/${branchName}/${buildType}
    ARGS=$(echo $@ | replace 'fresh' '')
    eval set -- $ARGS
    echo $@
fi

for d in ${PROJECTS_TO_BUILD}; do
    cd $d && build -s -j${threadCount} ${buildType} $* --client ${client} --target ${buildDirBase} --branch ${branchName} --project ${d} || exit 1
    cd ->/dev/null
done
