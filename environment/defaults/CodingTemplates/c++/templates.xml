<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Inserts a pretty-function thing" enabled="true" name="__PRETTY_FUN">__PRETTY_FUNCTION__</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.comment" deleted="false" description="author name" enabled="true" id="org.eclipse.cdt.ui.text.templates.comment.author" name="author">author ${user}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="catch block" enabled="true" id="org.eclipse.cdt.ui.text.templates.cpp.catch" name="catch">catch (${Exception} e) {
	${cursor}
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="class declaration" enabled="true" id="org.eclipse.cdt.ui.text.templates.cpp.class" name="class">class ${name} {
public:
	${cursor}

private:
};</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Inserts a cout trace for comparison" enabled="true" name="cmpTrc">cout &lt;&lt; ${cursor} &lt;&lt; endl; // ${tag}Cmp</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="default multiline comment" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.comment" name="comment">
/*
 * author ${user}
 *
 * To change this generated comment edit the template variable "comment":
 * Window &gt; Preferences &gt; C/C++ &gt; Editor &gt; Templates.
 */
</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Inserts an empty cout-endl statement" enabled="true" name="cout">cout &lt;&lt; "${cursor}" &lt;&lt; endl;</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Cout with param" enabled="true" name="coutp">cout &lt;&lt; "${param} = " &lt;&lt; ${param} &lt;&lt; ${cursor}endl;</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Insert a crpiTemplate comment" enabled="true" name="crpi">  // crpiTrace</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Inserts a &quot;Do nothing&quot; comment" enabled="true" name="dn">/* Do nothing */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="do while statement" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.do" name="do">do {
	${line_selection}${cursor}
} while (${condition});</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="else block" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.else" name="else">else {
	${cursor}
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="else if block" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.elseif" name="elseif">else if (${condition}) {
	${cursor}
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Inserts a todo assert" enabled="true" name="fassert">// TODO (0) Implement method
assert(false);
</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="for loop" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.for" name="for">for (${var} = 0; ${var} &lt; ${max}; ++${var}) {
	${line_selection}${cursor}
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="for loop with auto iterator" enabled="true" name="forauto">for (auto&amp; ${v} : ${vector})
{
	${v}${cursor}
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="for loop with auto iterator" enabled="true" name="forcauto">for (const auto&amp; ${v} : ${vector})
{
	${v}${cursor}
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="for loop with temporary variable" enabled="true" id="org.eclipse.cdt.ui.text.templates.cpp.for" name="fori">for (int ${var} = 0; ${var} &lt; ${max}; ++${var}) 
{
	${line_selection}${cursor}
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="for loop with temporary variable" enabled="true" name="fors">for (size_t ${var} = 0; ${var} &lt; ${max}; ++${var}) 
{
	${line_selection}${cursor}
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="if statement" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.if" name="if">if (${condition}) 
{
	${line_selection}${cursor}
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="if else statement" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.ifelse" name="ifelse">if (${condition}) {
	${cursor}
} else {
	
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Inserts a log trace piece of code" enabled="true" name="logtrc">#ifdef FILE_LOGGING
	Logger::stream(${logFileName}) &lt;&lt; className() &lt;&lt; ":" &lt;&lt; __FUNCTION__ &lt;&lt; endl;
#endif // FILE_LOGGING
</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="main method" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.main" name="main">int main(int argc, char **argv) {
	${cursor}
}
</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="namespace declaration" enabled="true" id="org.eclipse.cdt.ui.text.templates.cpp.namespace" name="namespace">namespace ${name} {

${cursor}

}  // namespace ${name}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="create new object" enabled="true" id="org.eclipse.cdt.ui.text.templates.cpp.new" name="new">${type} ${name} = new ${type}(${arguments});</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Inserts a cout param" enabled="true" name="param"> "; ${param} = " &lt;&lt; ${param} &lt;&lt;</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="print to standard error" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.fprintf" name="stderr">fprintf(stderr, ${cursor});</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="print to standard output" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.printf" name="stdout">printf(${cursor});</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="switch case statement" enabled="true" id="org.eclipse.cdt.ui.text.templates.c.switch" name="switch">switch (${key}) {
	case ${value}:
		${cursor}
		break;
	default:
		break;
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Inserts a BOOST test case skeleton" enabled="true" name="test_case">BOOST_AUTO_TEST_CASE( ${test_name} )
{
  // Write your tests here and remove the line below
  BOOST_CHECK_EQUAL(0, 1);
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Insert a cout trace statement" enabled="true" name="trc">cout &lt;&lt; "TRACE: " &lt;&lt; __PRETTY_FUNCTION__&lt;&lt; " " &lt;&lt; __LINE__ &lt;&lt; endl; // crpiTrace</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="try catch block" enabled="true" id="org.eclipse.cdt.ui.text.templates.cpp.try" name="try">try {
	${line_selection}${cursor}
} catch (${Exception} e) {
}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="Inserts typedefs for iterators for a given class" enabled="true" name="typedef_it">// Iterator typedefs
typedef std::vector&lt; ${className} &gt;::iterator it_${className};
typedef std::vector&lt; ${className} &gt;::const_iterator ct_it_${className};
typedef std::vector&lt; ${className}* &gt;::iterator it_p${className};
typedef std::vector&lt; ${className}* &gt;::const_iterator ct_it_p${className};
</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.templates.c" deleted="false" description="using a namespace" enabled="true" id="org.eclipse.cdt.ui.text.templates.cpp.using" name="using">using namespace ${name};
</template></templates>