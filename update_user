#!/bin/bash

###
# Function "GetFilePath"
###
# Arguments: $1 = FULL_FILE_NAME
#
#
GetFilePath()
{
    FULL_FILE_NAME=$1
    FILE_BASE_NAME=`basename $FULL_FILE_NAME`
    echo `echo $FULL_FILE_NAME | sed "s/$FILE_BASE_NAME$//"`
}


##
# Function 'makeSymLink'
##
# Arguments: $1 = TARGET_NAME
#            $2 = LINK_NAME
#
makeSymLink()
{
    TARGET_NAME=$1
    LINK_NAME=$2


    if [ -d $TARGET_NAME ]
        then
        if [  ! -d $LINK_NAME ]
            then
            ln -s $TARGET_NAME $LINK_NAME
        fi
        else
        echo "Target directory $TARGET_NAME does not exist. Will not make symlink."
    fi
}




##
# The main script
##

TARGET_DIRECTORY=$HOME/.${USER}_config

BASE_DIRECTORY=`GetFilePath $0`

echo -e "\nThe checkout must be located in: ${TARGET_DIRECTORY}\n"

if [ ${BASE_DIRECTORY} != "./" ]; then
   echo "This script must be run from the directory where it resides: $BASE_DIRECTORY"
   exit 1
fi

if [ -z $XCUSTOMS_USER ]; then
    echo "The environment variable XCUSTOMS_USER is not defined. Will use the user name: $USER."
    XCUSTOMS_USER=$USER
fi

BACK_UP_DIR=$HOME/.backup_account
CONFIG_DIR=$HOME/.$USER"_config"

echo "Warning!!! This will overwrite any existing customizations."
echo "Are you sure you want to continue? [Y/N]"

read answer
case $answer in
    y| Y | yes | Yes | YES) ;;
    *) echo "Aborting at user request" & exit 0
esac

# Make a back-up
if [ ! -d $BACK_UP_DIR ]
    then
    echo Creating back-up directory $BACK_UP_DIR
    mkdir $BACK_UP_DIR || (echo "Could not create back-up directory" && exit 0)
fi

# Create the 'bin' directory
if [ ! -d $HOME/bin ]; then
    mkdir $HOME/bin || (echo "Could not create the 'bin' directory" && exit 0)
fi

echo "Updating from the GIT repository"
git pull


# Run the install script 
source install.sh

echo "Installation complete"
